u='VwAxYImyiMgeaXWXOSkB'; # username
p='HgFdrwvpWYhSfSoHZhKcBQVGvimwRrKopFPNEXqWPEBsakGHXTTHgtoweeVXrnFXipDBICGSJeQzircESKtjPKUyBWZjKPBRyQKDVlIkinPrnSGDigJLYMMhGMwFIoS'; # password

m="$(pgrep -nx mpv | gre -o '/.*$')" || return 1; # currently playing video
t="${m##*/}"; # title
h='/moviehash-'"$(hashmov.pl ${m})"; # hash identifying movie file via https://trac.opensubtitles.org/projects/opensubtitles/wiki/HashSourceCodes
b='/moviebytesize-'"$(du --bytes ${m} | /bin/grep -Po '^\d+')"; # movie bytesize
if [[ ${m##*/} =~ '[sS]?[0-9]+?\.?[eE]?[0-9]+?' ]]; then e=$(echo ${m##*/}|perl -pe 's/.*?[sS]?(0?\d+)\.?[eE]?(\d+).*/\1---\2/'); fi; # season and episode
[ -f /tmp/ISO_639-2.json ] || curl -s "https://raw.githubusercontent.com/wecodemore/ISO_639-2/master/ISO_639-2.json" > /tmp/ISO_639-2.json;
l1=($(sed -rn 's/.*"([a-z]{3})":/\1/ p' /tmp/ISO_639-2.json));
l2=($(sed -rn '/"[a-z]{3}"/ {n;n;n;p}' /tmp/ISO_639-2.json | sed ':a;/,$/{N;s/\n//;ba}' | tr -d '",'));
l3='/sublanguageid-'"$()"

a="$(pcre2grep -Mv '\s+"native": \[\s+(.*?\s)*?\]' ISO_639-2.json | sed '/"english": /d; /[{}]/d' | pcre2grep -Mv '^\s+"[a-z]{2}":(.*?\s)+?((?!\s+"[a-z]{3}":).+)')";

echo ${a} | awk '{print $2}' FS='\t' | tr -s '\n' |tr -d '":'
echo ${a} | awk '{print $4}' FS='\t' | tr -s '\n' |tr -d '"'


d=("${(@f)$(echo ${a} | /bin/grep -Po '"[a-z]{3}":' | tr -d '":')}");
s=("${(@f)$(pcre2grep -M ':([^:])*' /tmp/ISO_639-2.json)}");

'/season-'"${e%---*}"
'/episode-'"${e#*---}"


perl -ne 's/.*"(\w{3})".*/\1/ && print' ISO_639-2.json

curl -A "$useragent" /sublanguageid-${l:-eng}
\t+"[a-z]{3}":\s+{\s+"english": \[\s+"(.*?)"(?:,\s+"(.*?)")?




curl -A "registeredUA"

https://rest.opensubtitles.org/search/episode-20/imdbid-4145054/moviebytesize-750005572/moviehash-319b23c54e9cf314/season-2/sublanguageid-eng
https://rest.opensubtitles.org/search

http basic auth, or add sid parameter into download link.
http://dl.opensubtitles.org/en/download/src-api/vrf-19d50c5e/sid-{YOUR_SID_HERE}/filead/1951976249.gz

episode (number)
season (number)
imdbid (always format it as sprintf("%07d", $imdb) - when using imdb you can add /tags-hdtv for example.
moviebytesize (number)
moviehash (should be always 16 character, must be together with moviebytesize)
query (use url_encode, make sure " " is converted to "%20")
sublanguageid (if ommited, all languages are returned)
tag (use url_encode, make sure " " is converted to "%20")



curl -A 'TemporaryUserAgent'  https://rest.opensubtitles.org/search/moviebytesize-750005572/moviehash-319b23c54e9cf314
curl -A 'TemporaryUserAgent'  https://rest.opensubtitles.org/search/episode-20/imdbid-4145054/moviebytesize-750005572/moviehash-319b23c54e9cf314/season-2/sublanguageid-eng
curl -A 'TemporaryUserAgent'  https://rest.opensubtitles.org/search/episode-11/imdbid-4145054/season-1/tags-web-dl
curl -A 'TemporaryUserAgent'  https://rest.opensubtitles.org/search/query-matrix%20reloaded/sublanguageid-eng
curl -A 'TemporaryUserAgent'  https://rest.opensubtitles.org/search/episode-8/sublanguageid-eng/tag-heroess01e08

curl -H "X-User-Agent: TemporaryUserAgent" https://rest.opensubtitles.org/search/query-matrix%20reloaded/sublanguageid-cze


curl -A 'TemporaryUserAgent'  http://rest.opensubtitles.org/suggest/query-a/sublanguageid-eng
curl -A 'TemporaryUserAgent'  http://rest.opensubtitles.org/getsublanguages/language-en
curl -vvv -d 'username=${u}&password=${p}' -X POST -A 'TemporaryUserAgent v1.2' "https://rest.opensubtitles.org/auth"
    








perl -ne '/\t+"([a-z]{3})":\s+\{\s+"english": \[\s+"(.*?)"(?:,\s+"(.*?)")?/m && print $1."\n".$2." ".$3."\n"' 

