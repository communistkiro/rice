#!/bin/zsh
function gen () {
  ((# > 0)) && return 1;
  typeset l u n s e x q a n1 n2 o1 o2; integer length; q=$'\n';

  read -r 'length?Length [64]> ' && ((length == 0)) && length=64;
  l=$([[ $(read -eq "?${q}No lowercase [y/*]?") = n ]] && <<< --lower);
  u=$([[ $(read -eq "?${q}No uppercase [y/*]?") = n ]] && <<< --upper);
  n=$([[ $(read -eq "?${q}No numbers   [y/*]?") = n ]] && <<< --numeric);
  s=$([[ $(read -eq "?${q}No special   [y/*]?") = n ]] && <<< --special);
  e=$([[ $(read -eq "?${q}No extended  [y/*]?") = n ]] && <<< --extended);
  read -r "x?${q}Exclude>    ";
  x=${x:+--exclude ${(j.,.)${(un)${(s..)x}}}};

  o2=0;
  for a ( {1..48} ) {
    n1="$(keepassxc-cli generate --length $length $l $u $n $s $e --every-group)";
    n2="$(keepassxc-cli estimate "$n1" | awk '{print $4}')";
    ((n2 > o2)) && { o2="$n2"; o1="$1"; };
  };
  printf '%s\n' "$n1";
}
