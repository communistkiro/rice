#!/bin/zsh
# ADDS NEW LINKS (FROM CTEBCM POSTS)
function xrpp () {
setopt rematch_pcre;
local o t1 t2 t3 t4 a;
while getopts '' o; do case $o in (*)
less -F <<HEREDOC
NAME
  xrpp - scrape alba and tracks from websites.

SYNOPSIS
  xrpp [website(s)]

DESCRIPTION
  Scrapes embedded bandcamp (and possibly deezer and soundcloud) alba and tracks, from web-
  site(s), remove entries found in current list of to-be-downloaded alba, and from list of 
  previously downloaded ones, as well as from the (at the time) soon-to-be released ones.

EXAMPLES
  Scape a website
    xrpp https://canthisevenbecalledmusic.com/monthly-recommendations-january-2020

BUGS
  Please report any aberrant behavior or bugs to vlg@tutamail.com


HEREDOC
return 1;;esac; done;

t1=$(mktemp /tmp/xrpp.XXXXXXXX); t2=$(mktemp /tmp/xrpp.XXXXXXXX); t3=$(mktemp /tmp/xrpp.XXXXXXXX); t4=$(mktemp /tmp/xrpp.XXXXXXXX);
for a in $(lynx -listonly -dump $@); do
  # EMBEDDED BANDCAMP PLAYERS
  [[ $a =~ 'EmbeddedPlayer' ]] && lynx -listonly -dump $a | pcre2grep -o 'http.*/album/[\w-]+' >> $t1;
  # DIRECT BANDCAMP
  [[ $a =~ 'bandcamp\.com(/album/)|(/track/)' ]] && printf '%s\n' ${${(S)a/*http/http}%%\?*} >> $t1;
  # DEEZER
  [[ $a =~ 'deezer' ]] && lynx -listonly -dump $a | pcre2grep -o 'http.*/album/[\w-]+' >> $t3;
  # SPOTIFY
  [[ $a =~ 'spotify' ]] && printf '%s\n' $a >> $t4;
  # SOUNDCLOUD
  # [[ $a =~ 'soundcloud' ]] && echo ${${(S)a/*http/http}%%\?*} >> ~/nm/soundcloud;
done;
# REMOVE ALREADY TO-BE-DL'D AND ALREADY DL'D URLS
# BANDCAMP
sort -u $t1 | sed '/spotify/d' > $t2;
pcre2grep '/spotify/' $t1  >> $t4;
diff ~/nm/bcnew $t2 | sed -rn 's/^> +//p' > $t1;
diff ~/nm/bcold $t1 | sed -rn 's/^> +//p' > $t2;
diff ~/nm/soon $t2  | sed -rn 's/^> +//p' > $t1;
cat ~/nm/bcnew >> $t1;
sort -u $t1 > ~/nm/bcnew;
# DEEZER
sort -u $t3 > $t2;
diff ~/nm/dznew $t2 | sed -rn 's/^> +//p' > $t1;
diff ~/nm/dzold $t1 | sed -rn 's/^> +//p' > $t2;
cat ~/nm/dznew >> $t2;
sort -u $t2 > ~/nm/dznew;
# SPOTIFY
sort -u $t4 > $t2;
diff ~/nm/spnew $t2 | sed -rn 's/^> +//p' > $t1;
diff ~/nm/spold $t1 | sed -rn 's/^> +//p' > $t2;
cat ~/nm/spnew >> $t2;
sort -u $t2 > ~/nm/spnew;

rm $t1 $t2 $t3 $t4; return 0;
}
