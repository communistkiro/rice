#!/bin/zsh
[[ -t 0 ]] || return 1;
# { which zsh && which pup && which curl} &>/dev/null || return 2;
ping -c 1 1.1.1.1 &>/dev/null || return 3;
emulate -LR zsh;
setopt pipe_fail
typeset query baseurl cat t n; 
typeset -i pages c q lr ls ll lt; 
typeset -a cats title seed leech size url category date hash;
n=$'\n'; 
t=$(mktemp);
baseurl='https://1337x.to';
cats=(Anime Apps Documentaries Games Movies Music Other TV XXX);
# ((# == 0)) && read -r "query?${n}> " || query="$@";
query="${${@}:-$(read -er "?${n}> ")}";
[[ ! ${query} =~ '^\s*$' ]] || return 4;

cat=${$(fzy -p 'Select category or search all: ' -l ${#cats} <<< ${(F)cats}):*cats};
[[ -z ${cat} ]] && query=/search/${query// /+}/ || query=/category-search/${query// /+}/${cat}/;

curl -sfLH User-Agent: ${baseurl}${query}1/ > ${t};
((${$(pup -f ${t} -n 'a[href^=/torrent/]'):-0} != 0)) || { printf ' No results.\n'; return 0 };

pages=${${$(pup -f ${t} '.last a attr{href}')%/}##*/};
if ((pages == 0)) {
   pages=1;
} elif ((pages > 4)) {
  read -r "q?${n}${pages} pages. Input number of pages to display> ";
  ((q < pages + 1)) && ((q > 1)) && pages=${q} || pages=5;
};

for q ( {1..${pages}} ) {
  title+=(${(fqq)"$(pup -p -f ${t} 'a[href^=/torrent/] text{}')"});
  seed+=(${(f)"$(pup -p -f ${t} 'td.seeds text{}')"});
  leech+=(${(f)"$(pup -p -f ${t} 'td.leeches text{}')"});
  size+=(${(fqq)"$(pup -p -f ${t} 'td.size json{}' | jq -r '.[].text')"});
  url+=(${(fqq)"$(pup -p -f ${t} 'td a[href^=/torrent/] attr{href}')"});
  category+=(${(fqq)"$(pup -p -f ${t} 'td.name .icon i attr{class}' | cut -d - -f 2-)"});
  date+=(${(fqq)"$(pup -p -f ${t} 'td.coll-date text{}')"});
  curl -sfLH User-Agent: ${baseurl}${query}$((q + 1))/ > ${t};
};

lr=${(c)#${#title}};
ls=${(c)#${${(nO)seed}[1]}};
ll=${(c)#${${(nO)leech}[1]}};
lt=$((COLUMNS - lr - 2 - 1 - 9 - 2 - 9 - 2 - ls - 1 - ll - 2 - 14));

while { true } {
  c=$(for q ( {1..${#title}} ) {
    printf "%.${lr}d  %b%-${lt}.${lt}s %b%-9.9s  %b%9.9s  %b%.${ls}d%b/%b%.${ll}d  %b%14.14s\n" \
      $q \
      '\033[1m'    ${(Q)title[q]:- } \
      '\033[33;1m' ${(Q)category[q]:- } \
      '\033[34;1m' ${(Q)size[q]:- } \
      '\033[32;1m' ${seed[q]} \
      '\033[37;1m' \
      '\033[31;1m' ${leech[q]} \
      '\033[36;1m' ${(Q)date[q]:--};
  } | fzy -l $LINES | cut -f 1 -d ' ') || break;
  ((c > 0 && c < ${#title} +1)) && hash+=($(curl -sfLH User-Agent: ${baseurl}${(Q)url[c]} | pup '.infohash-box span text{}'));
};

((${#hash} > 0)) && { qbittorrent ${(u)hash} &>/dev/null & disown };
rm ${t} &>/dev/null; return 0;
