#!/bin/zsh

TMPMAIL_API_URL='https://www.1secmail.com/api/v1/';
TMPMAIL_DIR=/tmp/tmpmail; mkdir -p $TMPMAIL_DIR; touch $TMPMAIL_DIR/emailaddresses;
BROWSER=sf;

function menu () {
  local m t a;
  while getopts 'm:t:' a; do case $a in
  (m) 
    m="\033[;3$(pcre2grep -o1 '([0-7])' <<< $OPTARG || <<< 7)";
    [[ $OPTARG =~ i ]] && m="${m};7";
    [[ $OPTARG =~ b ]] && m="${m};1";
    m="${m}m";;
  (t)
    t="\033[;3$(pcre2grep -o1 '([0-7])' <<< $OPTARG || <<< 7)";
    [[ $OPTARG =~ i ]] && t="${t};7";
    [[ $OPTARG =~ b ]] && t="${t};1";
    t="${t}m";;
  esac; done;
  for a in $@[OPTIND,-1]; do printf '%b%4s    %b%s%b\n' "${m:-\033[;0m}" "${a%% *}" "${t:-\033[;0m}" "${a#* }" '\033[;0m'; done;
}

function box () {
  ((# == 0)) && return 0;
  typeset a h B T H ul ur dl dr uh dh lv rv r; integer s; s=1;
  while getopts 's:h:B:T:H:' a; do case $a in
    (s) # line style
      s=$OPTARG;; 
    (h) # header
      h=$OPTARG;; 
    (B) # box color
      B="\033[;3$(pcre2grep -o1 '([0-7])' <<< $OPTARG || <<< 7)";
      [[ $OPTARG =~ i ]] && B="${B};7";
      [[ $OPTARG =~ b ]] && B="${B};1";
      B="${B}m";;
    (T) # text color
      T="\033[;3$(pcre2grep -o1 '([0-7])' <<< $OPTARG || <<< 7)";
      [[ $OPTARG =~ i ]] && T="${T};7";
      [[ $OPTARG =~ b ]] && T="${T};1";
      T="${T}m";;
    (H) # header color
      H="\033[;3$(pcre2grep -o1 '([0-7])' <<< $OPTARG || <<< 7)";
      [[ $OPTARG =~ i ]] && H="${H};7";
      [[ $OPTARG =~ b ]] && H="${H};1";
      H="${H}m";;
  esac; done;

  ul=(┏ ┌ ╔ ⡏); ul=${ul[$s]};
  dl=(┗ └ ╚ ⣇); dl=${dl[$s]};
  ur=(┓ ┐ ╗ ⢹); ur=${ur[$s]};
  dr=(┛ ┘ ╝ ⣸); dr=${dr[$s]};
  uh=(━ ─ ═ ⠉); uh=${uh[$s]};
  dh=(━ ─ ═ ⣀); dh=${dh[$s]};
  lv=(┃ │ ║ ⡇); lv=${lv[$s]};
  rv=(┃ │ ║ ⢸); rv=${rv[$s]};

  s=0; for a in $@[OPTIND,-1]; do ((${(c)#a} > $s)) && s=${(c)#a}; done;
  if ((${+h})) && (($#h > $s)); then s=$#h; ((s+=2)); fi; ((s+=2)); 

  r='\033[;0m';
  ((${+h})) && printf '%b\n' "$B$ul${(pr.(((s-$#h)/2))..$uh.)uh}$r$H$h$r$B${(pr.(((s-$#h)/2+$#h+s-($#h+s)/2*2))..$uh.)uh}$ur" || printf '%b\n' "$B$ul${(pr.((s-1))..$uh.)uh}$ur";

  for a in $@[OPTIND,-1]; do printf '%b\n' "$lv $r$T${(r.((s-2)).. .)a} $r$B$rv"; done;

  printf '%b\n' "$dl${(pr.$s..$dh.)dh}$dr$r";
}

function fetch () { # List all the received emails in a nicely formatted order
  typeset l q m #i f s t;
  curl -s -f -L --max-redirs 0 -H 'User-Agent:' -o $a "${TMPMAIL_API_URL}?action=getMessages&login=${u}@1secmail.${d}&domain=1secmail.${d}" || \
  curl -s -f -L --max-redirs 0 -o $a "${TMPMAIL_API_URL}?action=getMessages&login=${u}@1secmail.${d}&domain=1secmail.${d}" || \
  curl -s -L --max-redirs 0 -o $a "${TMPMAIL_API_URL}?action=getMessages&login=${u}@1secmail.${d}&domain=1secmail.${d}" || return 123;
 
  l=$(jq length $a);
  ((l == 0)) && read -k1 '?No (new) mail.' && return;

  i=id;       i+=(${(@f)"$(jq -r '.[].id')"});
  f=from;     f+=(${(@f)"$(jq -r '.[].from')"});
  s=subject;  s+=(${(@f)"$(jq -r '.[].subject')"});
  t=time;     t+=(${(@f)"$(jq -r '.[].date')"});
}

function view() { # View an email by ID
  typeset b;
  curl -s -f -L --max-redirs 0 -H 'User-Agent:' -o $m "${TMPMAIL_API_URL}?action=readMessage&login=${u}&domain=1secmail.${d}&id=${1}" || \
  curl -s -f -L --max-redirs 0 -o $m "${TMPMAIL_API_URL}?action=readMessage&login=${u}&domain=1secmail.${d}&id=${c[$1]}" || \
  curl -s -L --max-redirs 0 -o $m "${TMPMAIL_API_URL}?action=readMessage&login=${u}&domain=1secmail.${d}&id=${c[$1]}";
  [[ "$(<$m)" = "Message not found" ]] && read -k1 'Message not found.' && return;

  b=$(jq -r '.htmlBody' $m);

  printf '%b\n' \
    "\033[;30;0m To:\033[;36;1m ${(l.8...)}${u}@1secmail.${d}\033[;0m" \
    "\033[;32;0m From:\033[;32;1m ${(l.6...)}$(jq -r '.from' $m)\033[;0m" \
    "\033[;34;0m Subject:\033[;34;1 $(jq -r '.subject' $m)\033[;0m" \
    "${b:-$(jq -r '.textBody' $m)}" | less;

  # if [[ $(read -seq "?Open with ${BROWSER}?") = y ]]; then
    printf '%s\n' \
      "<pre><b>To: </b>${u}@1secmail.${d}" \
      "<b>From: </b>$(jq -r '.from' $m)" \
      "<b>Subject: </b>$(jq -r '.subject' $m)</pre>" \
      "${b:-<pre>$(jq -r '.textBody' $m)</pre>}" > $TMPMAIL_DIR/${c[$1]}.html;
  #   $BROWSER "$TMPMAIL_DIR/${c[$1]}.html";
  # fi;
}

function gena () { # (re)generate random 12-character email address
  typeset ds;
  ds=('com' 'net' 'org');
  d=${ds[(RANDOM % 3 + 1)]};
  u=$(cat /dev/random | tr -cd '[:alnum:]' | head -c 12 | tr '[:upper:]' '[:lower:]');
  unset z;
  # wwjmp.com 1secmail.{com,net,org}
  # ${u}@1secmail.${d};
}

function seta () {
  if (($+u)) && (($+d)); then
    ! pcre2grep -q "^${u}@1secmail\.${d}$" $TMPMAIL_DIR/emailaddresses && \
    printf '%s\n' "${u}@1secmail.${d}" >> $TMPMAIL_DIR/emailaddresses && \
    typeset -gx z || read -sk1 '?Already in set email addresses!';
  else 
    gena && seta;
  fi;
}

function picka () { # select one of previously set addresses
  typeset s;
  s=$(cat $TMPMAIL_DIR/emailaddresses | fzy -l $LINES);
  u=${s%@*};
  d=${s#*@1secmail.};
  typeset -gx z;
}

function () {
  typeset t a m c; m=$(mktemp /$TMPMAIL_DIR/XXXXXXXX); a=$(mktemp /$TMPMAIL_DIR/XXXXXXXX);
  while true; do
    clear;
    box -H i5 -B 4b -T 2 -h "${u}@1secmail.${d}${(r.2...l.2...)}${${z:+set}:-not set}" ${(@f)"$(print -C 5 $(seq ${l:-0}) $t $i $f $s)"};
    menu -t 6b -m 2b \
      'g (re)generate address' \
      's save current' \
      'r refresh inbox' \
      'R view most recent' \
      'y copy address to clipboard' \
      'c pick from previously set' \
      'C custom address' \
      '# view email #_' \
      'q quit';
    case $(read -sek1 'c?: ') in
      (g) gena;;
      (s) seta;;
      (r) fetch;;
      (R) fetch; view 1;;
      (y) (($+u)) && (($+d)) && printf '%s' ${u}@1secmail.${d} | xclip -se c;;
      (c) picka; fetch;;
      (C) read 'u?: '; "[a-z0-9]+@1secmail\.(com|net|org)";;
      (0) c=10;&
      ([1-9]) ((c > l)) && read -k1 '?Bad index!' && return || view $c;;
      (q) exit 0;;
    esac;
  done;
}
