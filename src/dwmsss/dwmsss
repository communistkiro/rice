#!/bin/sh
while true; do
    xsetroot -name "\
    $(if ps -C mpd > /dev/null; then printf "%s - %s %s/%s%s" "$(mpc current -f %artist%)" "$(mpc current -f %title%)" "$(mpc status | grep "%)" | awk '{ print $3 }' | awk -F/ '{ print $1 }')" "$(mpc current -f %time%)"; fi)\
    $(cut -b -2 /sys/class/thermal/thermal_zone0/temp)Â°\
    $(printf "%4s/%4s  %4s/%1s" "$(free -m| awk '(NR == 2) {print $3}')" "$(free -m |awk '(NR == 2) {print $2}')" "$(free -g| awk '(NR == 3) {print $3}')" "$(free -g |awk '(NR == 3) {print $2}')")\
    $(CONSTATE=$(wpa_cli status | sed -n '/wpa_state/s/^.*=//p'); case $CONSTATE in 'COMPLETED') CONSSID=$(wpa_cli status | sed -n '/\<ssid\>/s/^.*=//p'); CONIP=$(wpa_cli status | sed -n '/ip_address/s/^.*=//p'); CONRSSI=$(wpa_cli signal_poll | sed -n '/AVG_RSSI/s/^.*=//p'); if [ "$CONRSSI" -gt -35 ]; then printf "%s" "$SEP1"; printf "%s %s" "$CONSSID" "$CONIP"; printf "%s\n" "$SEP2"; elif [ "$CONRSSI" -ge -55 ] && [ "$CONRSSI" -lt -35 ]; then printf "%s" "$SEP1"; printf "%s %s" "$CONSSID" "$CONIP"; printf "%s\n" "$SEP2"; elif [ "$CONRSSI" -ge -75 ] && [ "$CONRSSI" -lt -55 ]; then printf "%s" "$SEP1"; printf "%s %s" "$CONSSID" "$CONIP"; printf "%s\n" "$SEP2"; else printf "%s" "$SEP1"; printf "%s %s" "$CONSSID" "$CONIP"; printf "%s\n" "$SEP2"; fi;; 'DISCONNECTED') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; 'INTERFACE_DISABLED') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; 'SCANNING') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; 'ASSOCIATING') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; 'ASSOCIATED') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; 'AUTHENTICATING') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; '4WAY_HANDSHAKE') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; 'GROUP_HANDSHAKE') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; 'INACTIVE') printf "%s" "$SEP1"; printf "%s" "$CONSTATE"; printf "%s\n" "$SEP2";; esac)\
        $(date '+%F %H:%M:%S')\
    "
    /bin/sleep .5;
done;
